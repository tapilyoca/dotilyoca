{
"competitive programming": {
  "prefix": "cmp",
  "body": [
    "/***********************************************",
    "* auth: tapilyoca                              *",
    "* date: $CURRENT_MONTH/$CURRENT_DATE/$CURRENT_YEAR at $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND                 *",
    "* dots: https://github.com/tapilyoca/dotilyoca * ",
    "***********************************************/",
    "",
    "#include <bits/stdc++.h>",
    "using namespace std;",
    "long long MOD = 1e9 + 7; //998'244'353;",
    "",
    "/******** Defines *********/",
    "typedef string str;",
    "typedef long long ll;",
    "typedef unsigned long long ull;",
    "typedef long double ld;",
    "typedef vector<ll> vll;",
    "typedef vector<vll> vvll;",
    "",
    "",
    "/******** Debug Code ******/",
    "void __print(int x) { cerr << x; }",
    "void __print(long x) { cerr << x; }",
    "void __print(long long x) { cerr << x; }",
    "void __print(unsigned x) { cerr << x; }",
    "void __print(unsigned long x) { cerr << x; }",
    "void __print(unsigned long long x) { cerr << x; }",
    "void __print(float x) { cerr << x; }",
    "void __print(double x) { cerr << x; }",
    "void __print(long double x) { cerr << x; }",
    "void __print(char x) { cerr << '\\'' << x << '\\''; }",
    "void __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }",
    "void __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }",
    "void __print(bool x) { cerr << (x ? \"true\" : \"false\"); }",
    "template <typename A>",
    "void __print(const A &x);",
    "template <typename A, typename B>",
    "void __print(const pair<A, B> &p);",
    "template <typename... A>",
    "void __print(const tuple<A...> &t);",
    "template <typename T>",
    "void __print(stack<T> s);",
    "template <typename T>",
    "void __print(queue<T> q);",
    "template <typename T, typename... U>",
    "void __print(priority_queue<T, U...> q);",
    "template <typename A>",
    "void __print(const A &x) {",
    "    bool first = true;",
    "    cerr << '{';",
    "    for (const auto &i : x) {",
    "        cerr << (first ? \"\" : \",\"), __print(i);",
    "        first = false;",
    "    }",
    "    cerr << '}';",
    "}",
    "template <typename A, typename B>",
    "void __print(const pair<A, B> &p) {",
    "    cerr << '(';",
    "    __print(p.first);",
    "    cerr << ',';",
    "    __print(p.second);",
    "    cerr << ')';",
    "}",
    "template <typename... A>",
    "void __print(const tuple<A...> &t) {",
    "    bool first = true;",
    "    cerr << '(';",
    "    apply([&first](const auto &...args) { ((cerr << (first ? \"\" : \",\"), __print(args), first = false), ...); }, t);",
    "    cerr << ')';",
    "}",
    "template <typename T>",
    "void __print(stack<T> s) {",
    "    vector<T> debugVector;",
    "    while (!s.empty()) {",
    "        T t = s.top();",
    "        debugVector.push_back(t);",
    "        s.pop();",
    "    }",
    "    reverse(debugVector.begin(), debugVector.end());",
    "    __print(debugVector);",
    "}",
    "template <typename T>",
    "void __print(queue<T> q) {",
    "    vector<T> debugVector;",
    "    while (!q.empty()) {",
    "        T t = q.front();",
    "        debugVector.push_back(t);",
    "        q.pop();",
    "    }",
    "    __print(debugVector);",
    "}",
    "template <typename T, typename... U>",
    "void __print(priority_queue<T, U...> q) {",
    "    vector<T> debugVector;",
    "    while (!q.empty()) {",
    "        T t = q.top();",
    "        debugVector.push_back(t);",
    "        q.pop();",
    "    }",
    "    __print(debugVector);",
    "}",
    "void _print() { cerr << \"]\\n\"; }",
    "template <typename Head, typename... Tail>",
    "void _print(const Head &H, const Tail &...T) {",
    "    __print(H);",
    "    if (sizeof...(T))",
    "        cerr << \", \";",
    "    _print(T...);",
    "}",
    "",
    "",
    "/******** Math ************/",
    "ll ceildiv(ll a, ll b){ return (a+b-1)/b; }",
    "ll gcd(ll a, ll b){ return b == 0 ? a : gcd(b, a%b); }",
    "ll lcm(ll a, ll b){ return (a / gcd(a, b)) * b; }",
    "",
    "ll power(ll x, ll y){",
    "    int ans = 1; x %= MOD; if(x == 0) return 0;",
    "    while(y > 0){",
    "        if(y & 1) ans = (ans * x) % MOD;",
    "        y = y >> 1; x = (x * x) % MOD;",
    "    } return ans;",
    "}",
    "",
    "ll modmult(ll a, ll b){",
    "    ll out = 0; a %= MOD;",
    "    while(b){",
    "        if(b & 1) out = (out+a)%MOD;",
    "        a = (2*a) % MOD; // Assumes 2 * a doesn't overflow!",
    "        b >>= 1;",
    "    } return out;",
    "}",
    "",
    "ll totient(ll n){",
    "    ll out = n;",
    "    for(int p = 2; p * p <= n; p++){",
    "        if(!(n%p)){",
    "            while(n%p == 0) n /= p;",
    "            out -= out/p;",
    "        }",
    "    } if(n>1) out -= out/n;",
    "    return out;",
    "    //note: phi(ab) = phi(a) * phi(b) * gcd(a,b)/phi(gcd(a,b))",
    "}",
    "",
    "",
    "/******** Shortcuts *******/",
    "bool ckmin(ll& a, ll b){ return b < a ? a = b, true : false; }",
    "bool ckmax(ll& a, ll b){ return b > a ? a = b, true : false; }",
    "inline void yes(){ cout << \"YES\" << endl;}",
    "inline void no(){ cout << \"NO\" << endl;}",
    "inline void fast_io(){ios::sync_with_stdio(false); cin.tie(NULL);}",
    "",
    "#define pb push_back",
    "#define mp make_pair",
    "",
    "#ifndef ONLINE_JUDGE",
    "#define debug(...) cerr << \"Line:\" << __LINE__ << \" [\" << #__VA_ARGS__ << \"] = [\"; _print(__VA_ARGS__)",
    "#else",
    "#define debug(...)",
    "#endif",
    "",
    "",
    "/**************************/",
    "",
    "void solve(){",
    "    $1",
    "}",
    "",
    "int main(){",
    "    fast_io(); //remove for interactive",
    "",
    "    int T; cin >> T;",
    "    while(T--){",
    "        solve();",
    "    }",
    "",
    "    return 0;",
    "} "
  ],
  "description": "competitive programming"
},

"competitive programming no testcases": {
  "prefix": "nocmp",
  "body": [
    "/***********************************************",
    "* auth: tapilyoca                              *",
    "* date: $CURRENT_MONTH/$CURRENT_DATE/$CURRENT_YEAR at $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND                 *",
    "* dots: https://github.com/tapilyoca/msfc-dots * ",
    "***********************************************/",
    "",
    "#include <bits/stdc++.h>",
    "using namespace std;",
    "long long MOD = 1e9 + 7; //998'244'353;",
    "",
    "/******** Defines *********/",
    "typedef string str;",
    "typedef long long ll;",
    "typedef unsigned long long ull;",
    "typedef long double ld;",
    "typedef vector<ll> vll;",
    "typedef vector<vll> vvll;",
    "",
    "",
    "/******** Debug Code ******/",
    "void __print(int x) { cerr << x; }",
    "void __print(long x) { cerr << x; }",
    "void __print(long long x) { cerr << x; }",
    "void __print(unsigned x) { cerr << x; }",
    "void __print(unsigned long x) { cerr << x; }",
    "void __print(unsigned long long x) { cerr << x; }",
    "void __print(float x) { cerr << x; }",
    "void __print(double x) { cerr << x; }",
    "void __print(long double x) { cerr << x; }",
    "void __print(char x) { cerr << '\\'' << x << '\\''; }",
    "void __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }",
    "void __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }",
    "void __print(bool x) { cerr << (x ? \"true\" : \"false\"); }",
    "template <typename A>",
    "void __print(const A &x);",
    "template <typename A, typename B>",
    "void __print(const pair<A, B> &p);",
    "template <typename... A>",
    "void __print(const tuple<A...> &t);",
    "template <typename T>",
    "void __print(stack<T> s);",
    "template <typename T>",
    "void __print(queue<T> q);",
    "template <typename T, typename... U>",
    "void __print(priority_queue<T, U...> q);",
    "template <typename A>",
    "void __print(const A &x) {",
    "    bool first = true;",
    "    cerr << '{';",
    "    for (const auto &i : x) {",
    "        cerr << (first ? \"\" : \",\"), __print(i);",
    "        first = false;",
    "    }",
    "    cerr << '}';",
    "}",
    "template <typename A, typename B>",
    "void __print(const pair<A, B> &p) {",
    "    cerr << '(';",
    "    __print(p.first);",
    "    cerr << ',';",
    "    __print(p.second);",
    "    cerr << ')';",
    "}",
    "template <typename... A>",
    "void __print(const tuple<A...> &t) {",
    "    bool first = true;",
    "    cerr << '(';",
    "    apply([&first](const auto &...args) { ((cerr << (first ? \"\" : \",\"), __print(args), first = false), ...); }, t);",
    "    cerr << ')';",
    "}",
    "template <typename T>",
    "void __print(stack<T> s) {",
    "    vector<T> debugVector;",
    "    while (!s.empty()) {",
    "        T t = s.top();",
    "        debugVector.push_back(t);",
    "        s.pop();",
    "    }",
    "    reverse(debugVector.begin(), debugVector.end());",
    "    __print(debugVector);",
    "}",
    "template <typename T>",
    "void __print(queue<T> q) {",
    "    vector<T> debugVector;",
    "    while (!q.empty()) {",
    "        T t = q.front();",
    "        debugVector.push_back(t);",
    "        q.pop();",
    "    }",
    "    __print(debugVector);",
    "}",
    "template <typename T, typename... U>",
    "void __print(priority_queue<T, U...> q) {",
    "    vector<T> debugVector;",
    "    while (!q.empty()) {",
    "        T t = q.top();",
    "        debugVector.push_back(t);",
    "        q.pop();",
    "    }",
    "    __print(debugVector);",
    "}",
    "void _print() { cerr << \"]\\n\"; }",
    "template <typename Head, typename... Tail>",
    "void _print(const Head &H, const Tail &...T) {",
    "    __print(H);",
    "    if (sizeof...(T))",
    "        cerr << \", \";",
    "    _print(T...);",
    "}",
    "",
    "",
    "/******** Math ************/",
    "ll ceildiv(ll a, ll b){ return (a+b-1)/b; }",
    "ll gcd(ll a, ll b){ return b == 0 ? a : gcd(b, a%b); }",
    "ll lcm(ll a, ll b){ return (a / gcd(a, b)) * b; }",
    "",
    "ll power(ll x, ll y){",
    "    int ans = 1; x %= MOD; if(x == 0) return 0;",
    "    while(y > 0){",
    "        if(y & 1) ans = (ans * x) % MOD;",
    "        y = y >> 1; x = (x * x) % MOD;",
    "    } return ans;",
    "}",
    "",
    "ll modmult(ll a, ll b){",
    "    ll out = 0; a %= MOD;",
    "    while(b){",
    "        if(b & 1) out = (out+a)%MOD;",
    "        a = (2*a) % MOD; // Assumes 2 * a doesn't overflow!",
    "        b >>= 1;",
    "    } return out;",
    "}",
    "",
    "ll totient(ll n){",
    "    ll out = n;",
    "    for(int p = 2; p * p <= n; p++){",
    "        if(!(n%p)){",
    "            while(n%p == 0) n /= p;",
    "            out -= out/p;",
    "        }",
    "    } if(n>1) out -= out/n;",
    "    return out;",
    "    //note: phi(ab) = phi(a) * phi(b) * gcd(a,b)/phi(gcd(a,b))",
    "}",
    "",
    "",
    "/******** Shortcuts *******/",
    "bool ckmin(ll& a, ll b){ return b < a ? a = b, true : false; }",
    "bool ckmax(ll& a, ll b){ return b > a ? a = b, true : false; }",
    "inline void yes(){ cout << \"YES\" << endl;}",
    "inline void no(){ cout << \"NO\" << endl;}",
    "inline void fast_io(){ios::sync_with_stdio(false); cin.tie(NULL);}",
    "",
    "#define pb push_back",
    "#define mp make_pair",
    "",
    "#ifndef ONLINE_JUDGE",
    "#define debug(...) cerr << \"Line:\" << __LINE__ << \" [\" << #__VA_ARGS__ << \"] = [\"; _print(__VA_ARGS__)",
    "#else",
    "#define debug(...)",
    "#endif",
    "",
    "",
    "/**************************/",
    "",
    "int main(){",
    "    fast_io(); //remove for interactive",
    "",
    "    $1", 
    "",
    "    return 0;",
    "} "
  ],
  "description": "competitive programming no testcases"
}

}
